Properties props = new Properties()
def propertiesFile = project.rootProject.file('local.properties')
if (propertiesFile.exists()) {
    props.load(propertiesFile.newDataInputStream())
}
def getEnvVar(Properties p, String key) {
    def envVal = System.getenv(key)
    def propVal = p.get(key)
    return envVal != null ? envVal : propVal
}
def writeGoogleServices(String flavor, Properties p) {
    def services = getEnvVar(p, "${flavor}GoogleServices")
    if (services != null) {
        file("$rootDir/app/src/$flavor").mkdirs()
        file("$rootDir/app/src/$flavor/google-services.json").text = services
    }
}

writeGoogleServices("debug", props)
writeGoogleServices("release", props)

apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    defaultConfig {
        String hash = 'git rev-parse --short HEAD'.execute().text.trim()
        String count = 'git rev-list --count HEAD'.execute().text.trim()
        String branch = 'git rev-parse --abbrev-ref HEAD'.execute().text.trim()
        String date = "git log -n1 --pretty='%cd' --date=format:%Y-%m-%d".execute().text.trim()

        applicationId "com.sofiasalud.sofiacall"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode count as Integer
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField("String", "GIT_HASH", "\"$hash\"")
        buildConfigField("String", "GIT_COUNT", "\"$count\"")
        buildConfigField("String", "GIT_BRANCH", "\"$branch\"")
        buildConfigField("String", "GIT_DATE", "\"$date\"")
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField("String", "MIXPANEL_TOKEN", "\"${getEnvVar(props, "releaseMixpanelToken")}\"")
        }
        debug {
            buildConfigField("String", "MIXPANEL_TOKEN", "\"${getEnvVar(props, "debugMixpanelToken")}\"")
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
        useIR = true
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_version
        kotlinCompilerVersion '1.4.0'
    }
}

dependencies {
    implementation project(':sofia-callscreen')

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.4.10"
    implementation "org.jetbrains.kotlin:kotlin-reflect:1.4.10"
    implementation 'com.opentok.android:opentok-android-sdk:2.16.5'
    implementation 'androidx.core:core-ktx:1.3.1'
    implementation 'pub.devrel:easypermissions:3.0.0'

    implementation 'com.github.kittinunf.fuel:fuel:2.3.0'
    implementation 'com.github.kittinunf.fuel:fuel-android:2.3.0'
    implementation 'com.github.kittinunf.fuel:fuel-moshi:2.3.0'

    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.2.1'
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.ui:ui-tooling:$compose_version"
    implementation "androidx.compose.foundation:foundation:$compose_version"
    implementation "androidx.compose.material:material:$compose_version"
    implementation "androidx.compose.material:material-icons-core:$compose_version"
    implementation "androidx.compose.material:material-icons-extended:$compose_version"
    implementation "androidx.compose.runtime:runtime-livedata:$compose_version"
    implementation "androidx.compose.runtime:runtime-rxjava2:$compose_version"

    // This firebase-bom package ensures that the other firebase packages match its version
    implementation platform('com.google.firebase:firebase-bom:25.12.0')
    implementation 'com.google.firebase:firebase-crashlytics-ktx'
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.google.firebase:firebase-auth-ktx'
    implementation 'com.google.firebase:firebase-firestore-ktx'
    implementation 'com.google.firebase:firebase-database-ktx'

    implementation 'com.mixpanel.android:mixpanel-android:5.+'

    // Serialization library
    implementation "com.squareup.moshi:moshi:1.10.0"
    implementation "com.squareup.moshi:moshi-kotlin:1.9.3"

    implementation "androidx.ui:ui-tooling:$compose_version"
    def lifecycleVersion = "2.2.0"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycleVersion"
}
